# Generated by Django 5.2.4 on 2025-07-11 13:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("student_id", models.CharField(max_length=20, unique=True)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("middle_name", models.CharField(blank=True, max_length=50)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.TextField()),
                (
                    "academic_level",
                    models.CharField(
                        choices=[
                            ("undergraduate", "Undergraduate"),
                            ("graduate", "Graduate"),
                            ("postgraduate", "Postgraduate"),
                            ("phd", "PhD"),
                        ],
                        max_length=20,
                    ),
                ),
                ("enrollment_date", models.DateField()),
                ("expected_graduation_date", models.DateField(blank=True, null=True)),
                ("current_semester", models.IntegerField(default=1)),
                (
                    "gpa",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("graduated", "Graduated"),
                            ("suspended", "Suspended"),
                            ("transferred", "Transferred"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("emergency_contact_name", models.CharField(max_length=100)),
                ("emergency_contact_phone", models.CharField(max_length=20)),
                ("emergency_contact_relationship", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.department",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Student",
                "verbose_name_plural": "Students",
                "ordering": ["student_id"],
            },
        ),
        migrations.CreateModel(
            name="StudentAcademicRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("semester", models.IntegerField()),
                ("year", models.IntegerField()),
                ("semester_gpa", models.DecimalField(decimal_places=2, max_digits=4)),
                ("cumulative_gpa", models.DecimalField(decimal_places=2, max_digits=4)),
                ("credits_earned", models.IntegerField()),
                ("total_credits", models.IntegerField()),
                ("academic_standing", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="academic_records",
                        to="students.student",
                    ),
                ),
            ],
            options={
                "verbose_name": "Academic Record",
                "verbose_name_plural": "Academic Records",
                "unique_together": {("student", "semester", "year")},
            },
        ),
    ]
